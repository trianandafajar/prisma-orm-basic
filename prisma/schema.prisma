generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  name      String?
  address   String
  phone     String
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int     @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  Profile   Profile?
  Post      Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Post {
  id        Int                 @id @default(autoincrement())
  title     String
  content   String?             @db.Text
  published Boolean             @default(false)
  author    User                @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId  Int
  CategoriesOnPosts CategoriesOnPosts[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("posts")
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String              @unique
  posts CategoriesOnPosts[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model CategoriesOnPosts {
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId     Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([postId, categoryId])
  @@map("categories_on_posts")
}
